{"version":3,"sources":["components/NavBar/NavBar.js","components/Header/Header.js","components/Footer/Footer.js","components/Breadcrumb/Breadcrumb.js","components/SideTable/SideTable.js","components/Tips/Tips.js","components/Comp/Comp.js","components/Tips/TippingContainer.js","components/Dashboard/Dashboard.js","components/Signin/Signin.js","components/Register/Register.js","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","_ref","onRouteChange","name","isSignedIn","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","react_router_dom","to","id","onClick","Header","Footer","Component","Breadcrumb","SideTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fixtures","_this2","fetch","method","headers","Content-Type","then","response","json","setState","teams","allNames","leagueTable","map","fixture","index","push","home","away","forEach","indexOf","teamScore","wins","losses","homePointsScored","homePointsConceded","awayPointsScored","awayPointsConceded","points","homeTeam","find","team","awayTeam","parseInt","result_home","result_away","sort","b","leagueRow","key","scope","Tips","selectHomeTeam","event","console","log","selectTeam","target","value","selectAwayTeam","selection","selectRound","selectedRound","filterFixtures","filter","round","onSubmitTip","i","length","tip","userid","fixtureid","fixture_id","body","JSON","stringify","_this3","fixtureRound","htmlFor","checked","onChange","resulthome","day","date","time","stadium","resultaway","rounds","Main","components_Breadcrumb_Breadcrumb","components_SideTable_SideTable","components_Tips_Tips","Signin","onEmailChange","signInEmail","onPasswordChange","signInPassword","onSubmitSignIn","email","password","user","loadUser","placeholder","required","autoFocus","Register","onNameChange","React","App","data","entries","joined","route","_this$state","components_NavBar_NavBar","components_Header_Header","Dashboard","components_Signin_Signin","components_Register_Register","components_Footer_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.861e6dcd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = ({ onRouteChange, name, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <div className=\"NavBar\">\r\n        <nav className=\"navbar navbar-default\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-header\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"navbar-toggle collapsed\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbar\"\r\n                aria-controls=\"navbar\"\r\n              >\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n              </button>\r\n              <Link to=\"/\" className=\"navbar-brand\">\r\n                FootyTips\r\n              </Link>\r\n            </div>\r\n            <div id=\"navbar\" className=\"collapse navbar-collapse\">\r\n              {/* <ul className=\"nav navbar-nav\">\r\n                <li>\r\n                  <Link to=\"/tips\">Tips</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/table\">Table</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/comp\">Comp</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/settings\">Settings</Link>\r\n                </li>\r\n              </ul> */}\r\n              <ul className=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                  <Link to=\"/\">Welcome, {name}</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\" onClick={() => onRouteChange(\"Signout\")}>\r\n                    Sign Out\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"NavBar\">\r\n        <nav className=\"navbar navbar-default\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-header\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"navbar-toggle collapsed\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbar\"\r\n                aria-controls=\"navbar\"\r\n              >\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n                <span className=\"icon-bar\" />\r\n              </button>\r\n              <Link to=\"/\" className=\"navbar-brand\">\r\n                FootyTips\r\n              </Link>\r\n            </div>\r\n            <div id=\"navbar\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"nav navbar-nav navbar-right\">\r\n                <li>\r\n                  <Link to=\"/\" onClick={() => onRouteChange(\"Signin\")}>\r\n                    Sign In\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\" onClick={() => onRouteChange(\"Register\")}>\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <header id=\"header\">\r\n        <div className=\"container\">\r\n          <div className=\"row text-left\">\r\n            <div className=\"col-md-12\">\r\n              <h1>\r\n                <i className=\"fas fa-football-ball\" /> Footy Tips{\" \"}\r\n                <small>NRL</small>\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Footer\">\r\n        <footer id=\"footer\">\r\n          <p>Copyright Gareth Hind &copy; 2019</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./Breadcrumb.css\";\r\n\r\nclass Breadcrumb extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Breadcrumb\">\r\n        {/* Breadcrumb */}\r\n        <section id=\"breadcrumb\">\r\n          <div className=\"container text-left\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"active\">Dashboard</li>\r\n            </ol>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SideTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fixtures: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://tipping-app-api.herokuapp.com/table\", {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(fixtures => {\r\n        this.setState({\r\n          fixtures: fixtures\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    // Arrays\r\n    let teams = [];\r\n    let allNames = [];\r\n    let leagueTable = [];\r\n\r\n    // Collect all names\r\n    this.state.fixtures.map((fixture, index) => {\r\n      return allNames.push(fixture.home) && allNames.push(fixture.away);\r\n    });\r\n\r\n    // Remove duplicates\r\n    allNames.forEach(name => {\r\n      if (teams.indexOf(name) === -1) {\r\n        teams.push(name);\r\n      }\r\n    });\r\n\r\n    // Create League Table\r\n    teams.forEach(name => {\r\n      let teamScore = {\r\n        name: name,\r\n        wins: 0,\r\n        losses: 0,\r\n        homePointsScored: 0,\r\n        homePointsConceded: 0,\r\n        awayPointsScored: 0,\r\n        awayPointsConceded: 0,\r\n        points: 0\r\n      };\r\n      leagueTable.push(teamScore);\r\n    });\r\n\r\n    this.state.fixtures.forEach(fixture => {\r\n      let homeTeam = leagueTable.find(team => team.name === fixture.home);\r\n      let awayTeam = leagueTable.find(team => team.name === fixture.away);\r\n\r\n      homeTeam.homePointsScored += +parseInt(fixture.result_home);\r\n      homeTeam.homePointsConceded += +parseInt(fixture.result_away);\r\n      awayTeam.awayPointsScored += +parseInt(fixture.result_away);\r\n      awayTeam.awayPointsConceded += +parseInt(fixture.result_home);\r\n\r\n      if (parseInt(fixture.result_home) > parseInt(fixture.result_away)) {\r\n        homeTeam.wins += 1;\r\n        homeTeam.points += 2;\r\n        awayTeam.losses += 1;\r\n      }\r\n      if (parseInt(fixture.result_away) > parseInt(fixture.result_home)) {\r\n        awayTeam.wins += 1;\r\n        awayTeam.points += 2;\r\n        homeTeam.losses += 1;\r\n      }\r\n    });\r\n\r\n    // Sort league table by points\r\n    leagueTable.sort((a, b) => {\r\n      return a.points < b.points ? 1 : -1;\r\n    });\r\n\r\n    const leagueRow = leagueTable.map((team, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <th scope=\"row\">{index + 1}</th>\r\n          <td />\r\n          <td>{team.name}</td>\r\n          <td>{team.wins}</td>\r\n          <td>{team.losses}</td>\r\n          <td>{team.points}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"SideTable\">\r\n        {/* Side Table */}\r\n        <div className=\"col-md-3\">\r\n          <div className=\"panel panel-default\">\r\n            {/* Heading */}\r\n            <div className=\"panel-heading main-color-bg\">\r\n              <h3 className=\"panel-title\">League Table</h3>\r\n            </div>\r\n\r\n            {/* League Table */}\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">P</th>\r\n                  <th scope=\"col\" />\r\n                  <th scope=\"col\">Team</th>\r\n                  <th scope=\"col\">W</th>\r\n                  <th scope=\"col\">L</th>\r\n                  <th scope=\"col\">Pts</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{leagueRow}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SideTable;\r\n","import React, { Component } from \"react\";\r\nimport \"./TippingContainer.css\";\r\n\r\nclass Tips extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fixtures: [],\r\n      selectedRound: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://tipping-app-api.herokuapp.com/fixtures\", {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(fixtures => {\r\n        console.log(\"fixtures: \", fixtures);\r\n        this.setState({\r\n          fixtures: fixtures\r\n        });\r\n      });\r\n    this.setState({ selectedRound: \"Round 1\" });\r\n  }\r\n\r\n  selectHomeTeam = event => {\r\n    console.log(\"clicked\");\r\n    this.selectTeam(event.target.value, \"home\");\r\n  };\r\n\r\n  selectAwayTeam = event => {\r\n    this.selectTeam(event.target.value, \"away\");\r\n  };\r\n\r\n  selectTeam = (index, team) => {\r\n    let fixtures = this.state.fixtures;\r\n    fixtures[index].selection = team;\r\n    this.setState({\r\n      fixtures: fixtures\r\n    });\r\n  };\r\n\r\n  selectRound = event => {\r\n    console.log(\"round selected\");\r\n    // console.log(event.target.value);\r\n    this.setState({\r\n      selectedRound: event.target.value\r\n    });\r\n  };\r\n\r\n  filterFixtures = () => {\r\n    return this.state.fixtures.filter((fixture, index) => {\r\n      return fixture.round === this.state.selectedRound;\r\n    });\r\n  };\r\n\r\n  onSubmitTip = () => {\r\n    let fixtures = this.filterFixtures();\r\n    for (let i = 0; i < fixtures.length; ++i) {\r\n      let fixture = fixtures[i];\r\n      let tip = {\r\n        userid: \"gazjoseph@gmail.com\",\r\n        fixtureid: fixture.fixture_id,\r\n        selection: fixture.selection\r\n      };\r\n      let body = JSON.stringify(tip);\r\n      console.log(fixture);\r\n      console.log(body);\r\n\r\n      // fetch(\"https://tipping-app-api.herokuapp.com/tips\", {\r\n      fetch(\"http://localhost:5000/tips\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: body\r\n      })\r\n        .then(response => response.json())\r\n        .then(json => console.log(json));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const fixtures = this.filterFixtures();\r\n    const fixtureRound = fixtures.map((fixture, index) => {\r\n      //console.log(fixture);\r\n      return (\r\n        <div key={index} className=\"tipping-row\">\r\n          <div className=\"squad home-squad\">\r\n            <div className=\"radio home-radio\">\r\n              <label htmlFor=\"\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"ml-2 mr-2\"\r\n                  value={index}\r\n                  checked={fixture.selection === \"home\"}\r\n                  onChange={this.selectHomeTeam}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"home-name\">{fixture.home}</div>\r\n            <div className=\"home-logo\" />\r\n            <div className=\"home-score\"> {fixture.resulthome}</div>\r\n          </div>\r\n          <div className=\"game-details text-center\">\r\n            <div className=\"game-date\">\r\n              {fixture.day}\r\n              {\"  \"}\r\n              {fixture.date}\r\n            </div>\r\n            <div className=\"game-time\">{fixture.time}</div>\r\n            <div className=\"game-venue\">{fixture.stadium}</div>\r\n          </div>\r\n          <div className=\"squad away-squad text-right\">\r\n            <div className=\"away-score\">{fixture.resultaway}</div>\r\n            <div className=\"away-logo\" />\r\n            <div className=\"away-name\">{fixture.away}</div>\r\n            <div className=\"radio away-radio\">\r\n              <label htmlFor=\"\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"ml-2 mr-2\"\r\n                  value={index}\r\n                  checked={fixture.selection === \"away\"}\r\n                  onChange={this.selectAwayTeam}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let rounds = [];\r\n    // Collect all rounds\r\n    const allRounds = this.state.fixtures.map(fixture => {\r\n      return fixture.round;\r\n    });\r\n\r\n    // Remove duplicates (1)\r\n    allRounds.forEach(round => {\r\n      if (rounds.indexOf(round) === -1) {\r\n        rounds.push(round);\r\n      }\r\n    });\r\n    console.log(rounds);\r\n\r\n    // Remove duplicates (2)\r\n    // let rounds2 = new Set(allRounds);\r\n    // console.log(rounds2);\r\n\r\n    return (\r\n      <div className=\"col-md-9\">\r\n        <div className=\"panel panel-default\">\r\n          {/* Heading */}\r\n          <div className=\"panel-heading main-color-bg\">\r\n            <h3 className=\"panel-title\">Latest Tips</h3>\r\n          </div>\r\n          {/* Tipping Container */}\r\n          <div className=\"panel-body\">\r\n            <div className=\"tipping-container\">\r\n              {/* Select Round */}\r\n              <div className=\"form-group select-round\">\r\n                <label htmlFor=\"gender\">Select Round</label>\r\n                <select\r\n                  className=\"form-control text-right\"\r\n                  id=\"selectRound\"\r\n                  onChange={this.selectRound}\r\n                  value={this.state.selectedRound}\r\n                >\r\n                  {rounds.map((round, index) => (\r\n                    <option\r\n                      key={index}\r\n                      className={\r\n                        this.state.selectedRound === round ? \"selected\" : \"\"\r\n                      }\r\n                    >\r\n                      {round}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {/* Fixture Round */}\r\n              {fixtureRound}\r\n              {/* Submit Button */}\r\n              <div className=\"submit-button text-right\">\r\n                <button\r\n                  onClick={this.onSubmitTip}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-default\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tips;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Comp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tips: [],\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Get Tips\r\n    fetch(\"http://localhost:5000/comp\", {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(tips => {\r\n        console.log(\"tips: \", tips);\r\n        this.setState({\r\n          tips: tips\r\n        });\r\n      });\r\n    // Get Fixtures\r\n    fetch(\"https://tipping-app-api.herokuapp.com/fixtures\", {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(fixtures => {\r\n        console.log(\"fixtures: \", fixtures);\r\n        this.setState({\r\n          fixtures: fixtures\r\n        });\r\n      });\r\n    // Get Users\r\n    fetch(\"http://localhost:5000/users\", {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(users => {\r\n        console.log(\"users: \", users);\r\n        this.setState({\r\n          users: users\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    let compTable = [];\r\n\r\n    this.state.users.forEach(user => {\r\n      let compScore = {\r\n        name: user.name,\r\n        email: user.email,\r\n        wins: 0,\r\n        losses: 0,\r\n        paid: \"\"\r\n      };\r\n      compTable.push(compScore);\r\n    });\r\n    console.log(compTable);\r\n\r\n    const compRow = compTable.map((user, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <th scope=\"row\">{index + 1}</th>\r\n          <td>{user.name}</td>\r\n          <td>{user.email}</td>\r\n          <td>{user.wins}</td>\r\n          <td>{user.losses}</td>\r\n          <td>{user.points}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"compTable\">\r\n        {/* Comp Results */}\r\n        <div className=\"col-md-9\">\r\n          <div className=\"panel panel-default\">\r\n            {/* Heading */}\r\n            <div className=\"panel-heading main-color-bg\">\r\n              <h3 className=\"panel-title\">Competition Table</h3>\r\n            </div>\r\n            {/* Comp Table */}\r\n            <div className=\"panel panel-default\">\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">P</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">W</th>\r\n                    <th scope=\"col\">L</th>\r\n                    <th scope=\"col\">Paid</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{compRow}</tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TippingContainer.css\";\r\n\r\nclass TippingContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fixtures: [],\r\n      selectedRound: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://tipping-app-api.herokuapp.com/fixtures\", {\r\n      method: \"get\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => response.json())\r\n      .then(fixtures => {\r\n        console.log(\"fixtures: \", fixtures);\r\n        this.setState({\r\n          fixtures: fixtures\r\n        });\r\n      });\r\n    this.setState({ selectedRound: \"Round 1\" });\r\n  }\r\n\r\n  selectHomeTeam = event => {\r\n    console.log(\"clicked\");\r\n    this.selectTeam(event.target.value, \"home\");\r\n  };\r\n\r\n  selectAwayTeam = event => {\r\n    this.selectTeam(event.target.value, \"away\");\r\n  };\r\n\r\n  selectTeam = (index, team) => {\r\n    let fixtures = this.state.fixtures;\r\n    fixtures[index].selection = team;\r\n    this.setState({\r\n      fixtures: fixtures\r\n    });\r\n  };\r\n\r\n  selectRound = event => {\r\n    console.log(\"round selected\");\r\n    // console.log(event.target.value);\r\n    this.setState({\r\n      selectedRound: event.target.value\r\n    });\r\n  };\r\n\r\n  filterFixtures = () => {\r\n    return this.state.fixtures.filter((fixture, index) => {\r\n      return fixture.round === this.state.selectedRound;\r\n    });\r\n  };\r\n\r\n  onSubmitTip = () => {\r\n    let fixtures = this.filterFixtures();\r\n    for (let i = 0; i < fixtures.length; ++i) {\r\n      let fixture = fixtures[i];\r\n      let tip = {\r\n        userid: \"gazjoseph@gmail.com\",\r\n        fixtureid: fixture.fixture_id,\r\n        selection: fixture.selection\r\n      };\r\n      let body = JSON.stringify(tip);\r\n      console.log(fixture);\r\n      console.log(body);\r\n\r\n      // fetch(\"https://tipping-app-api.herokuapp.com/tips\", {\r\n      fetch(\"http://localhost:5000/tips\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: body\r\n      })\r\n        .then(response => response.json())\r\n        .then(json => console.log(json));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const fixtures = this.filterFixtures();\r\n    const fixtureRound = fixtures.map((fixture, index) => {\r\n      //console.log(fixture);\r\n      return (\r\n        <div key={index} className=\"tipping-row\">\r\n          <div className=\"squad home-squad\">\r\n            <div className=\"radio home-radio\">\r\n              <label htmlFor=\"\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"ml-2 mr-2\"\r\n                  value={index}\r\n                  checked={fixture.selection === \"home\"}\r\n                  onChange={this.selectHomeTeam}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"home-name\">{fixture.home}</div>\r\n            <div className=\"home-logo\" />\r\n            <div className=\"home-score\"> {fixture.resulthome}</div>\r\n          </div>\r\n          <div className=\"game-details text-center\">\r\n            <div className=\"game-date\">\r\n              {fixture.day}\r\n              {\"  \"}\r\n              {fixture.date}\r\n            </div>\r\n            <div className=\"game-time\">{fixture.time}</div>\r\n            <div className=\"game-venue\">{fixture.stadium}</div>\r\n          </div>\r\n          <div className=\"squad away-squad text-right\">\r\n            <div className=\"away-score\">{fixture.resultaway}</div>\r\n            <div className=\"away-logo\" />\r\n            <div className=\"away-name\">{fixture.away}</div>\r\n            <div className=\"radio away-radio\">\r\n              <label htmlFor=\"\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"ml-2 mr-2\"\r\n                  value={index}\r\n                  checked={fixture.selection === \"away\"}\r\n                  onChange={this.selectAwayTeam}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let rounds = [];\r\n    // Collect all rounds\r\n    const allRounds = this.state.fixtures.map(fixture => {\r\n      return fixture.round;\r\n    });\r\n\r\n    // Remove duplicates (1)\r\n    allRounds.forEach(round => {\r\n      if (rounds.indexOf(round) === -1) {\r\n        rounds.push(round);\r\n      }\r\n    });\r\n    console.log(rounds);\r\n\r\n    // Remove duplicates (2)\r\n    // let rounds2 = new Set(allRounds);\r\n    // console.log(rounds2);\r\n\r\n    return (\r\n      <div className=\"TippingContainer\">\r\n        {/* Tipping Container */}\r\n        <div className=\"tipping-container\">\r\n          {/* Select Round */}\r\n          <div className=\"form-group select-round\">\r\n            <label htmlFor=\"gender\">Select Round</label>\r\n            <select\r\n              className=\"form-control text-right\"\r\n              id=\"selectRound\"\r\n              onChange={this.selectRound}\r\n              value={this.state.selectedRound}\r\n            >\r\n              {rounds.map((round, index) => (\r\n                <option\r\n                  key={index}\r\n                  className={\r\n                    this.state.selectedRound === round ? \"selected\" : \"\"\r\n                  }\r\n                >\r\n                  {round}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* Fixture Round */}\r\n          {fixtureRound}\r\n          {/* Submit Button */}\r\n          <div className=\"submit-button text-right\">\r\n            <button\r\n              onClick={this.onSubmitTip}\r\n              type=\"submit\"\r\n              className=\"btn btn-default\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TippingContainer;\r\n","import React, { Component } from \"react\";\r\nimport Breadcrumb from \"../Breadcrumb/Breadcrumb\";\r\nimport SideTable from \"../SideTable/SideTable\";\r\nimport Comp from \"../Comp/Comp\";\r\nimport TippingContainer from \"../Tips/TippingContainer\";\r\nimport Tips from \"../Tips/Tips\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        {/* Main */}\r\n        <section id=\"main\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <Breadcrumb />\r\n              <SideTable />\r\n              {/* <Comp /> */}\r\n              <Tips />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"./Signin.css\";\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\"\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://tipping-app-api.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"Dashboard\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"form-signin\">\r\n          <h2 className=\"form-signin-heading\">Sign In</h2>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputEmail\" className=\"sr-only\">\r\n              Email address\r\n            </label>\r\n            <input\r\n              onChange={this.onEmailChange}\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputPassword\" className=\"sr-only\">\r\n              Password\r\n            </label>\r\n            <input\r\n              onChange={this.onPasswordChange}\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            onClick={this.onSubmitSignIn}\r\n            className=\"btn btn-lg btn-primary btn-block\"\r\n            type=\"submit\"\r\n          >\r\n            Sign in\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => onRouteChange(\"Register\")}\r\n            className=\"btn btn-lg btn-danger btn-block\"\r\n            type=\"submit\"\r\n          >\r\n            Register\r\n          </button>\r\n\r\n          {/*  \r\n          <div>\r\n            <p onClick={() => onRouteChange(\"Register\")}>Register</p>\r\n          </div>\r\n          */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(\"https://tipping-app-api.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"Dashboard\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"form-signin\">\r\n          <h2 className=\"form-signin-heading\">Register</h2>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputName\">Name</label>\r\n            <input\r\n              onChange={this.onNameChange}\r\n              type=\"text\"\r\n              id=\"inputName\"\r\n              name=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter name\"\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputEmail\">Email address</label>\r\n            <input\r\n              onChange={this.onEmailChange}\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputPassword\">Password</label>\r\n            <input\r\n              onChange={this.onPasswordChange}\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter password\"\r\n              required\r\n            />\r\n          </div>\r\n          {/* \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"inputFavTeam\">Select Team</label>\r\n            <select className=\"form-control\" id=\"favTeam\">\r\n              <option>Brisbane Broncos</option>\r\n              <option>Canberra Raiders</option>\r\n              <option>Canterbury Bulldogs</option>\r\n              <option>Cronulla Sharks</option>\r\n              <option>Gold Coast Titans</option>\r\n              <option>Manly Sea Eagles</option>\r\n              <option>Melbourne Storm</option>\r\n              <option>Newcastle Knights</option>\r\n              <option>New Zealand Warriors</option>\r\n              <option>North Queensland Cowboys</option>\r\n              <option>Parramatta Eels</option>\r\n              <option>Penrith Panthers</option>\r\n              <option>South Sydney Rabbitohs</option>\r\n              <option>St George Illawarra Dragons</option>\r\n              <option>Sydney Roosters</option>\r\n              <option>West Tigers</option>\r\n            </select>\r\n          </div> */}\r\n\r\n          <button\r\n            onClick={this.onSubmitSignIn}\r\n            className=\"btn btn-lg btn-primary btn-block pointer\"\r\n            type=\"submit\"\r\n            value=\"register\"\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Signin from \"./components/Signin/Signin\";\r\nimport Register from \"./components/Register/Register\";\r\n\r\n/*\r\nimport Tips from \"./components/Tips/Tips\";\r\n*/\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      route: \"Signin\",\r\n      isSignedIn: false,\r\n      user: {\r\n        id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        entries: 0,\r\n        joined: \"\"\r\n      }\r\n    };\r\n  }\r\n\r\n  loadUser = data => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    if (route === \"Signout\") {\r\n      this.setState({ isSignedIn: false });\r\n    } else if (route === \"Dashboard\") {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, route } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar\r\n          isSignedIn={isSignedIn}\r\n          name={this.state.user.name}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        <Header />\r\n\r\n        {route === \"Dashboard\" ? (\r\n          <Dashboard />\r\n        ) : route === \"Signin\" ? (\r\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'))\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}